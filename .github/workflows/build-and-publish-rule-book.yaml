name: Build and Publish Rule Book

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]

jobs:
  matrix-setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - id: set-matrix
      run: |
        cat << 'EOF' > matrix.json
        {
          "include": [
            { "language": "en", "luaengine": false },
            { "language": "pl", "luaengine": false },
            { "language": "es", "luaengine": false },
            { "language": "fr", "luaengine": false },
            { "language": "ru", "luaengine": true },
            { "language": "ua", "luaengine": true },
            { "language": "de", "luaengine": false },
            { "language": "cs", "luaengine": true },
            { "language": "he", "luaengine": true }
          ]
        }
        EOF
        echo "matrix=$(jq -c . matrix.json)" >> $GITHUB_OUTPUT

  digital_build:
    needs: matrix-setup
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.matrix-setup.outputs.matrix) }}
    uses: ./.github/workflows/pdf-build.yaml
    with:
      language: ${{ matrix.language }}
      luaengine: ${{ matrix.luaengine }}
      build_type: digital

  printable_build:
    needs: matrix-setup
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.matrix-setup.outputs.matrix) }}
    uses: ./.github/workflows/pdf-build.yaml
    with:
      language: ${{ matrix.language }}
      luaengine: ${{ matrix.luaengine }}
      build_type: printable

  economy_build:
    needs: matrix-setup
    if: github.event_name != 'pull_request'
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.matrix-setup.outputs.matrix) }}
    uses: ./.github/workflows/pdf-build.yaml
    with:
      language: ${{ matrix.language }}
      luaengine: ${{ matrix.luaengine }}
      build_type: economy

      # - name: Publish ${{ matrix.language }} in artifacts repository
      #   if: github.event_name != 'pull_request'
      #   uses: peaceiris/actions-gh-pages@v4
      #   with:
      #     deploy_key: ${{ secrets.SSH_DEPLOY_KEY_BUILD_ARTIFACTS }}
      #     external_repository: qwrtln/Homm3BG-build-artifacts
      #     publish_branch: ${{ matrix.language }}
      #     publish_dir: ./${{ matrix.language }}
      #     force_orphan: true

  check_pages:
    needs: [digital_build, printable_build]
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: ["pl", "es", "fr", "ru", "ua", "de", "cs", "he"]
        build_type: ["digital", "printable"]
    steps:
      - name: Download English ${{ matrix.build_type }} page count artifact
        uses: actions/download-artifact@v4
        with:
          name: en_${{ matrix.build_type }}_page_count
          path: ./en_page_count

      - name: Download ${{ matrix.language }}-${{ matrix.build_type }} page count artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.language }}_${{ matrix.build_type }}_page_count
          path: ./${{ matrix.language }}_page_count

      - name: Check number of pages
        run: |
          EXPECTED_NUM_OF_PAGES=$(cat ./en_page_count/en_${{ matrix.build_type }}_page_count.txt)
          ACTUAL_NUM_OF_PAGES=$(cat ./${{ matrix.language }}_page_count/${{ matrix.language }}_${{ matrix.build_type }}_page_count.txt)

          echo "Expected number of pages: ${EXPECTED_NUM_OF_PAGES}"
          echo "Actual number of pages:   ${ACTUAL_NUM_OF_PAGES}"

          if [[ ${EXPECTED_NUM_OF_PAGES} != ${ACTUAL_NUM_OF_PAGES} ]]; then
            echo "The ${{ matrix.build_type }} document in ${{ matrix.language }} language doesn't have the correct number of pages. See the output above."
            exit 1
          fi

      - uses: geekyeggo/delete-artifact@v5
        with:
          name: ${{ matrix.language }}_${{ matrix.build_type }}_page_count
