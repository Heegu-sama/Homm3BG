#!/usr/bin/env bash


# Default values
language="en"
printable=false
no_bg=false

# Valid language codes
valid_languages=("en" "pl" "es" "fr" "ua" "ru" "cs" "he" "de")

# Function to print usage information
usage() {
  echo "Usage: $0 [language] [-p|--printable] [-n|--no-bg]"
  echo "Example: $0 fr --printable --no-bg"
  echo
  echo "Positional arguments:"
  echo "  language           Language code (${valid_languages[*]})"
  echo "                     Defaults to 'en' if not specified"
  echo
  echo "Options:"
  echo "  -p, --printable    Enable printable mode"
  echo "  -n, --no-bg        Disable background"
  exit 1
}

# Function to check if language is valid
is_valid_language() {
  local lang="$1"
  for valid_lang in "${valid_languages[@]}"; do
    if [ "$lang" = "$valid_lang" ]; then
      return 0
    fi
  done
  return 1
}

# Check if first argument is a language code
if [[ $1 =~ ^[a-z]{2}$ ]]; then
  if is_valid_language "$1"; then
    language="$1"
    shift
  else
    echo "Error: Invalid language code '$1'. Valid codes are: ${valid_languages[*]}" >&2
    exit 1
  fi
fi

# Parse remaining command line arguments
while [[ $# -gt 0 ]]; do
  case $1 in
    -p|--printable)
        printable=true
        shift
        ;;
    -n|--no-bg)
        no_bg=true
        shift
        ;;
    -h|--help)
        usage
        ;;
    -*)
        echo "Error: Unknown option $1" >&2
        usage
        ;;
    *)
        echo "Error: Unexpected argument '$1'" >&2
        usage
        ;;
  esac
done

case "$(uname -s)" in
  Darwin*)    open=open;;
  Linux*)     open=xdg-open;;
esac


case "${language}" in
  ru|ua|cs|he)
    ENGINE=-pdflua
    ;;
  *)
    ENGINE=-pdf
    ;;
esac

if [[ ${language} != en ]]; then
  po4a --no-update po4a.cfg \
    2> >(grep -v "unmatched end of environment .multicols\| (po4a::tex)$" >&2) \
    | grep "/${language}/"  # limit output to specified language
fi

if [[ "$printable" = true ]]; then
  export HOMM3_PRINTABLE=1
fi

if [[ "$no_bg" = true ]]; then
  export HOMM3_NO_ART_BACKGROUND=1
fi

# rm triggers latexmk build even if previous artifacts generated by faulty run of po4a prevent it from running
rm -f "main_${language}.aux" && \
  latexmk ${ENGINE} -shell-escape "main_${language}.tex"
${open} "main_${language}.pdf" &> /dev/null &
